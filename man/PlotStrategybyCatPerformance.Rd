% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PlotStrategybyCatPerformance_m2.R
\name{PlotStrategybyCatPerformance}
\alias{PlotStrategybyCatPerformance}
\title{Check response time by var}
\usage{
PlotStrategybyCatPerformance(data, strategy.var, categ.var, namexlab,
  nameylab)
}
\arguments{
\item{data}{A \code{matrix} or \code{data.frame}}

\item{strategy.var}{strategy variable}

\item{categ.var}{categorizing variable}

\item{namexlab}{name of the variable in the x-axis}

\item{nameylab}{name of the variable in the y-axis}
}
\value{
This function returns a \code{data.frame} with the number of students
  and number de actions (min-max) aggregated by a specific variable.
}
\description{
This is a function that reports the number of students and number of actions
(min-max) aggregated by a specific variable.
}
\examples{
# Data preparation
df <- cp025q01[cp025q01$cnt == "NOR", ]
df$NewID <- paste0(df$cnt, "-", df$schoolid, "-", df$StIDStd)
trim.vars <- c("event", "event_type", "top_setting", "central_setting",
               "bottom_setting", "diag_state")
df.trimmed <- m0$TrimVar(df, trim.vars)
library(rlang)
concat.events <- c(quo(event), quo(event_type), quo(top_setting),
                   quo(central_setting), quo(bottom_setting), quo(diag_state))
df.conc <- m0$ConcatActions(df.trimmed, concat.events)
clear.events <- c("ACER_EVENT_" = "", "_NULL" = "")
df.clean <- m0$CleanActions(df.conc, event.type, clear.events)
time.vars <- c("cnt", "schoolid", "StIDStd", "NewID")
df.start <- m1$VarTimebyID(df.clean, NewID, time, new.event.type,
                           "START_ITEM",
                           "CP025Q01.START")[c(time.vars, "CP025Q01.START")]
df.end   <- m1$VarTimebyID(df.clean, NewID, time, new.event.type,
                           "END_ITEM",
                           "CP025Q01.END")[c(time.vars, "CP025Q01.END")]
df.dataAct <- m0$DataActionsbyID(df.clean, NewID, new.event.type,
                                 "CP025Q01.ACTIONS")[c(time.vars, "CP025Q01.ACTIONS")]
df.time <- dplyr::left_join(df.start, df.end, by = time.vars)
df.timeActions <- dplyr::left_join(df.time, df.dataAct, by = time.vars)
df.dataAct <- m1$TOTVar(df.timeActions, "CP025Q01.START", "CP025Q01.END",
                        divBy = 60, tot.var = "CP025Q01.TOT")
df.dataAct <- m2$VarActionSearch(df.timeActions, "CP025Q01.ACTIONS", "apply_1_0_0")
df.dataAct$top <- as.numeric(apply(df.dataAct["freq.apply_1_0_0"], 1, sum) > 0)
micro <- pisa[pisa$CNT == "NOR", ]
names(df.dataAct)[1:2] <- c("CNT", "SCHOOLID")
df.complete <- dplyr::left_join(df.dataAct, micro,
                                by = c("CNT", "SCHOOLID", "StIDStd"))

df.complete$categ <- cut(df.complete$PV1CPRO, c(0, 423, 488, 553, 900))
df.dataplot <- df.complete[, c("top", "categ")]
df.dataplot[,1] <- as.factor(df.dataplot[,1])
df.dataplot[,2] <- as.factor(df.dataplot[,2])

# Function demonstration
m2$PlotStrategybyCatPerformance(df.dataplot, top, categ,
                                 "Proficiency levels", "Percentage")

}
